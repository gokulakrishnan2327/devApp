{"version":3,"sources":["components/layout/spinner/spinner.module.css","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Login.js","components/auth/Register.js","components/layout/Alert.js","components/layout/spinner/Spinner.js","actions/profile.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-form/CreateProfile.js","components/profile-form/EditProfile.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile-form/AddExperience.js","components/profile-form/AddEducation.js","components/routing/PrivateRoute.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","href","guestLinks","login","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","register","password2","alerts","alert","length","map","key","Spinner","styles","loader","getCurrentProfile","statusText","status","createProfile","history","edit","push","DashboardActions","deleteExperience","delete","experience","experiences","exp","_id","company","title","format","from","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","window","confirm","user","useEffect","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","toggleSocialInputs","join","social","ProfileItem","avatar","src","alt","slice","skill","index","getProfiles","profiles","addExperience","put","current","description","toDateDisabled","toggleDisabled","checked","disabled","cols","rows","addEducation","fieldofstudy","Component","component","rest","render","props","ProfileTop","rel","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","defaultProps","postId","addPost","setText","getPosts","posts","addComment","deleteComment","commentId","comment","getPost","initialState","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.923ab364.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"spinner_loader__1GuEJ\",\"load6\":\"spinner_load6__1EBYb\",\"round\":\"spinner_round__2677z\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\n// Action alert\r\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\r\n    const id = uuidv4();\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg, alertType, id },\r\n    });\r\n\r\n    // 5 seconds it will dispatch remove alert\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\n\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const DELETE_ACCOUNT = 'DELETE_ACCOUNT';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_REPOS = 'GET_REPOS';\r\n\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const GET_POST = 'GET_POST';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\n","import axios from 'axios';\r\n\r\n/**\r\n * Set token to header\r\n * @param {String} token\r\n */\r\nconst setAuthToken = (token) => {\r\n    if (token) {\r\n        axios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common['x-auth-token'];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_PROFILE,\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n    if (localStorage.token) {\r\n        setAuthToken(localStorage.token);\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get('/api/auth');\r\n\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: AUTH_ERROR,\r\n        });\r\n    }\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    };\r\n\r\n    const body = JSON.stringify({ name, email, password });\r\n\r\n    try {\r\n        const res = await axios.post('/api/users', body, config);\r\n\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data,\r\n        });\r\n\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: REGISTER_FAIL,\r\n        });\r\n    }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post('/api/auth', body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data,\r\n        });\r\n\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n        });\r\n    }\r\n};\r\n\r\n// Logout and clear profile\r\nexport const logout = () => (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_PROFILE,\r\n    });\r\n\r\n    dispatch({\r\n        type: LOGOUT,\r\n    });\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n    const authLinks = (\r\n        <ul>\r\n            <li>\r\n                <Link to='/profiles'>Developers</Link>\r\n            </li>\r\n            <li>\r\n                <Link to='/posts'>Posts</Link>\r\n            </li>\r\n            <li>\r\n                <Link to='/dashboard'>\r\n                    <i className='fas fa-code' /> <span className='hide-sm'>Dashboard</span>\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <a onClick={logout} href='/#!'>\r\n                    <i className='fas fa-sing-out-a'></i> <span className='hide-sm'>Logout</span>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    );\r\n\r\n    const guestLinks = (\r\n        <ul>\r\n            <li>\r\n                <Link to='/profiles'>Developers</Link>\r\n            </li>\r\n            <li>\r\n                <Link to='/register'>Register</Link>\r\n            </li>\r\n            <li>\r\n                <Link to='/login'>Login</Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n\r\n    return (\r\n        <nav className='navbar bg-dark'>\r\n            <h1>\r\n                <Link to='/'>\r\n                    <i className='fas fa-code'></i> DevPortfolio\r\n                </Link>\r\n            </h1>\r\n            {!loading && <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>}\r\n        </nav>\r\n    );\r\n};\r\n\r\nNavbar.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/dashboard' />;\r\n    }\r\n\r\n    return (\r\n        <section className='landing'>\r\n            <div className='dark-overlay'>\r\n                <div className='landing-inner'>\r\n                    <h1 className='x-large'>Developer Portfolio</h1>\r\n                    <p className='lead'>\r\n                        Create a developer profile/portfolio, share posts and get help from other\r\n                        developers\r\n                    </p>\r\n                    <div className='buttons'>\r\n                        <Link to='/register' className='btn btn-primary'>\r\n                            Sign Up\r\n                        </Link>\r\n                        <Link to='/login' className='btn btn-light'>\r\n                            Login\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nLanding.propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        login(email, password);\r\n    };\r\n\r\n    // Redirect if logged in\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/dashboard' />;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Sign In</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user'></i> Sign Into Your Account\r\n            </p>\r\n            <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='email'\r\n                        placeholder='Email Address'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        name='password'\r\n                        minLength='6'\r\n                        value={password}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <input type='submit' className='btn btn-primary' value='Login' />\r\n            </form>\r\n            <p className='my-1'>\r\n                Don't have an account? <Link to='/register'>Sign Up</Link>\r\n            </p>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ isAuthenticated: state.auth.isAuthenticated });\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\n// destructure setAlert action\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: '',\r\n    });\r\n\r\n    const { name, email, password, password2 } = formData;\r\n\r\n    const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (password !== password2) {\r\n            setAlert('Passwords do not match', 'danger');\r\n        } else {\r\n            register({ name, email, password });\r\n        }\r\n    };\r\n\r\n    // Redirect if logged in\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/dashboard' />;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Sign Up</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user'></i> Create Your Account\r\n            </p>\r\n            <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Name'\r\n                        name='name'\r\n                        value={name}\r\n                        onChange={(e) => onChange(e)}\r\n                        // required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='email'\r\n                        placeholder='Email Address'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={(e) => onChange(e)}\r\n                        // required\r\n                    />\r\n                    <small className='form-text'>\r\n                        {/* This site uses Gravatar so if you want a profile image, use a Gravatar email */}\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        name='password'\r\n                        minLength='6'\r\n                        value={password}\r\n                        onChange={(e) => onChange(e)}\r\n                        // required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        name='password2'\r\n                        minLength='6'\r\n                        value={password2}\r\n                        onChange={(e) => onChange(e)}\r\n                        // required\r\n                    />\r\n                </div>\r\n                <input type='submit' className='btn btn-primary' value='Register' />\r\n            </form>\r\n            <p className='my-1'>\r\n                Already have an account? <Link to='/login'>Sign In</Link>\r\n            </p>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ isAuthenticated: state.auth.isAuthenticated });\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Alert = ({ alerts }) =>\r\n    alerts !== null &&\r\n    alerts.length > 0 &&\r\n    alerts.map((alert) => (\r\n        <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n            {alert.msg}\r\n        </div>\r\n    ));\r\n\r\nAlert.propTypes = {\r\n    alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React from 'react';\r\nimport styles from './spinner.module.css';\r\n\r\nconst Spinner = () => <div className={styles.loader}>Loading...</div>;\r\n\r\nexport default Spinner;\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n    DELETE_ACCOUNT,\r\n    CLEAR_PROFILE,\r\n    GET_PROFILES,\r\n    GET_REPOS,\r\n} from './types';\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get('./api/profile/me');\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status },\r\n        });\r\n    }\r\n};\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async (dispatch) => {\r\n    dispatch({ type: CLEAR_PROFILE });\r\n\r\n    try {\r\n        const res = await axios.get('/api/profile');\r\n\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status },\r\n        });\r\n    }\r\n};\r\n\r\n// Get profile by ID\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status },\r\n        });\r\n    }\r\n};\r\n\r\n// Get Github repos\r\nexport const getGithubRepos = (username) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status },\r\n        });\r\n    }\r\n};\r\n\r\n// Create or update profile\r\nexport const createProfile = (formData, history, edit = false) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        const res = await axios.post('/api/profile', formData, config);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data,\r\n        });\r\n\r\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n        if (!edit) {\r\n            history.push('/dashboard');\r\n        }\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status },\r\n        });\r\n    }\r\n};\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        const res = await axios.put('/api/profile/experience', formData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data,\r\n        });\r\n\r\n        dispatch(setAlert('Experience Added', 'success'));\r\n\r\n        history.push('/dashboard');\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status },\r\n        });\r\n    }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        const res = await axios.put('/api/profile/education', formData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data,\r\n        });\r\n\r\n        dispatch(setAlert('Education Added', 'success'));\r\n\r\n        history.push('/dashboard');\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status },\r\n        });\r\n    }\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data,\r\n        });\r\n\r\n        dispatch(setAlert('Experience Removed', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status },\r\n        });\r\n    }\r\n};\r\n\r\n// Delete education\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data,\r\n        });\r\n\r\n        dispatch(setAlert('Education Removed', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status },\r\n        });\r\n    }\r\n};\r\n\r\n// Delete Account and profile\r\nexport const deleteAccount = () => async (dispatch) => {\r\n    if (window.confirm('Are you sure? This can NOT be undone!')) {\r\n        try {\r\n            await axios.delete('/api/profile');\r\n\r\n            dispatch({ type: CLEAR_PROFILE });\r\n            dispatch({ type: DELETE_ACCOUNT });\r\n\r\n            dispatch(setAlert('Your account has been permanantly deleted', 'danger'));\r\n        } catch (err) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: { msg: err.response.statusText, status: err.response.status },\r\n            });\r\n        }\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const DashboardActions = () => {\r\n    return (\r\n        <div className='dash-buttons'>\r\n            <Link to='/edit-profile' className='btn btn-light'>\r\n                <i className='fas fa-user-circle text-primary'></i> Edit Profile\r\n            </Link>\r\n            <Link to='/add-experience' className='btn btn-light'>\r\n                <i className='fab fa-black-tie text-primary'></i> Add Experience\r\n            </Link>\r\n            <Link to='/add-education' className='btn btn-light'>\r\n                <i className='fas fa-graduation-cap text-primary'></i> Add Education\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteExperience } from '../../actions/profile';\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n    const experiences = experience.map((exp) => (\r\n        <tr key={exp._id}>\r\n            <td>{exp.company}</td>\r\n            <td className='hide-sm'>{exp.title}</td>\r\n            <td>\r\n                <Moment format='YYYY/MM/DD'>{exp.from}</Moment> -{' '}\r\n                {exp.to === null ? ' Now' : <Moment format='YYYY/MM/DD'>{exp.to}</Moment>}\r\n            </td>\r\n            <td>\r\n                <button className='btn btn-danger' onClick={() => deleteExperience(exp._id)}>\r\n                    Delete\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    ));\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2 className='my-2'>Experience Credentials</h2>\r\n            <table className='table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Company</th>\r\n                        <th className='hide-sm'>Title</th>\r\n                        <th className='hide-sm'>Years</th>\r\n                        <th />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{experiences}</tbody>\r\n            </table>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nExperience.propTypes = {\r\n    experience: PropTypes.array.isRequired,\r\n    deleteExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteEducation } from '../../actions/profile';\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n    const educations = education.map((edu) => (\r\n        <tr key={edu._id}>\r\n            <td>{edu.school}</td>\r\n            <td className='hide-sm'>{edu.degree}</td>\r\n            <td>\r\n                <Moment format='YYYY/MM/DD'>{edu.from}</Moment> -{' '}\r\n                {edu.to === null ? ' Now' : <Moment format='YYYY/MM/DD'>{edu.to}</Moment>}\r\n            </td>\r\n            <td>\r\n                <button className='btn btn-danger' onClick={() => deleteEducation(edu._id)}>\r\n                    Delete\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    ));\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2 className='my-2'>Education Credentials</h2>\r\n            <table className='table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>School</th>\r\n                        <th className='hide-sm'>Degree</th>\r\n                        <th className='hide-sm'>Years</th>\r\n                        <th />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{educations}</tbody>\r\n            </table>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nEducation.propTypes = {\r\n    education: PropTypes.array.isRequired,\r\n    deleteEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/spinner/Spinner';\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\r\nimport { DashboardActions } from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\n\r\n//racfp\r\nconst Dashboard = ({\r\n    getCurrentProfile,\r\n    auth: { user },\r\n    profile: { profile, loading },\r\n    deleteAccount,\r\n}) => {\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n    }, [getCurrentProfile]);\r\n\r\n    return loading && profile === null ? (\r\n        <Spinner />\r\n    ) : (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Dashboard</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user'></i> Welbome {user && user.name}\r\n            </p>\r\n            {profile !== null ? (\r\n                <Fragment>\r\n                    <DashboardActions />\r\n                    <Experience experience={profile.experience} />\r\n                    <Education education={profile.education} />\r\n\r\n                    <div className='my-2'>\r\n                        <button className='btn btn-danger' onClick={() => deleteAccount()}>\r\n                            <i className='fas fa-user-minus'></i> Delete My Account\r\n                        </button>\r\n                    </div>\r\n                </Fragment>\r\n            ) : (\r\n                <Fragment>\r\n                    <p>You have not yet setup a profile, plseae add some info</p>\r\n                    <Link to='/create-profile' className='btn btn-primary my-1'>\r\n                        Create Profile\r\n                    </Link>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard);\r\n","import React, { useState, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: '',\r\n    });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram,\r\n    } = formData;\r\n\r\n    const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        createProfile(formData, history);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Create Your Profile</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user'></i> Let's get some information to make your profile\r\n                stand out\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n                        <option value='0'>* Select Professional Status</option>\r\n                        <option value='Developer'>Developer</option>\r\n                        <option value='Junior Developer'>Junior Developer</option>\r\n                        <option value='Senior Developer'>Senior Developer</option>\r\n                        <option value='Manager'>Manager</option>\r\n                        <option value='Student or Learning'>Student or Learning</option>\r\n                        <option value='Instructor'>Instructor or Teacher</option>\r\n                        <option value='Intern'>Intern</option>\r\n                        <option value='Other'>Other</option>\r\n                    </select>\r\n                    <small className='form-text'>\r\n                        Give us an idea of where you are at in your career\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Company'\r\n                        name='company'\r\n                        value={company}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        Could be your own company or one you work for\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Website'\r\n                        name='website'\r\n                        value={website}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>Could be your own or a company website</small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Location'\r\n                        name='location'\r\n                        value={location}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>City & state suggested (eg. Boston, MA)</small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* Skills'\r\n                        name='skills'\r\n                        value={skills}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Github Username'\r\n                        name='githubusername'\r\n                        value={githubusername}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        If you want your latest repos and a Github link, include your username\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <textarea\r\n                        placeholder='A short bio of yourself'\r\n                        name='bio'\r\n                        value={bio}\r\n                        onChange={(e) => onChange(e)}\r\n                    ></textarea>\r\n                    <small className='form-text'>Tell us a little about yourself</small>\r\n                </div>\r\n\r\n                <div className='my-2'>\r\n                    <button\r\n                        onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n                        type='button'\r\n                        className='btn btn-light'\r\n                    >\r\n                        Add Social Network Links\r\n                    </button>\r\n                    <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialInputs && (\r\n                    <Fragment>\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-twitter fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Twitter URL'\r\n                                name='twitter'\r\n                                value={twitter}\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-facebook fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Facebook URL'\r\n                                name='facebook'\r\n                                value={facebook}\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-youtube fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='YouTube URL'\r\n                                name='youtube'\r\n                                value={youtube}\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-linkedin fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Linkedin URL'\r\n                                name='linkedin'\r\n                                value={linkedin}\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-instagram fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Instagram URL'\r\n                                name='instagram'\r\n                                value={instagram}\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n\r\n                <input type='submit' className='btn btn-primary my-1' />\r\n                <Link className='btn btn-light my-1' to='dashboard'>\r\n                    Go Back\r\n                </Link>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","import React, { useState, Fragment, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n    profile: { profile, loading },\r\n    createProfile,\r\n    getCurrentProfile,\r\n    history,\r\n}) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: '',\r\n    });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n\r\n        // check loading or no profile, then blank. If not loading or have profile, then fill it\r\n        setFormData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n            instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n        });\r\n    }, [loading, getCurrentProfile]);\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram,\r\n    } = formData;\r\n\r\n    const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        createProfile(formData, history, true);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Create Your Profile</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user'></i> Let's get some information to make your profile\r\n                stand out\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n                        <option value='0'>* Select Professional Status</option>\r\n                        <option value='Developer'>Developer</option>\r\n                        <option value='Junior Developer'>Junior Developer</option>\r\n                        <option value='Senior Developer'>Senior Developer</option>\r\n                        <option value='Manager'>Manager</option>\r\n                        <option value='Student or Learning'>Student or Learning</option>\r\n                        <option value='Instructor'>Instructor or Teacher</option>\r\n                        <option value='Intern'>Intern</option>\r\n                        <option value='Other'>Other</option>\r\n                    </select>\r\n                    <small className='form-text'>\r\n                        Give us an idea of where you are at in your career\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Company'\r\n                        name='company'\r\n                        value={company}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        Could be your own company or one you work for\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Website'\r\n                        name='website'\r\n                        value={website}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>Could be your own or a company website</small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Location'\r\n                        name='location'\r\n                        value={location}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>City & state suggested (eg. Boston, MA)</small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* Skills'\r\n                        name='skills'\r\n                        value={skills}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Github Username'\r\n                        name='githubusername'\r\n                        value={githubusername}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        If you want your latest repos and a Github link, include your username\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <textarea\r\n                        placeholder='A short bio of yourself'\r\n                        name='bio'\r\n                        value={bio}\r\n                        onChange={(e) => onChange(e)}\r\n                    ></textarea>\r\n                    <small className='form-text'>Tell us a little about yourself</small>\r\n                </div>\r\n\r\n                <div className='my-2'>\r\n                    <button\r\n                        onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n                        type='button'\r\n                        className='btn btn-light'\r\n                    >\r\n                        Add Social Network Links\r\n                    </button>\r\n                    <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialInputs && (\r\n                    <Fragment>\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-twitter fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Twitter URL'\r\n                                name='twitter'\r\n                                value={twitter}\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-facebook fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Facebook URL'\r\n                                name='facebook'\r\n                                value={facebook}\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-youtube fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='YouTube URL'\r\n                                name='youtube'\r\n                                value={youtube}\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-linkedin fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Linkedin URL'\r\n                                name='linkedin'\r\n                                value={linkedin}\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-instagram fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Instagram URL'\r\n                                name='instagram'\r\n                                value={instagram}\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n\r\n                <input type='submit' className='btn btn-primary my-1' />\r\n                <Link className='btn btn-light my-1' to='dashboard'>\r\n                    Go Back\r\n                </Link>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n    withRouter(EditProfile)\r\n);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileItem = ({\r\n    profile: {\r\n        user: { _id, name, avatar },\r\n        status,\r\n        company,\r\n        location,\r\n        skills,\r\n    },\r\n}) => {\r\n    return (\r\n        <div className='profile bg-light'>\r\n            <img src={avatar} alt='' className='round-img' />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>\r\n                    {status} {company && <span> at {company}</span>}\r\n                </p>\r\n                <p className='my-1'>{location && <span>{location}</span>}</p>\r\n                <Link to={`/profile/${_id}`} className='btn btn-primary'>\r\n                    View Profile\r\n                </Link>\r\n            </div>\r\n            <ul>\r\n                {skills.slice(0, 4).map((skill, index) => (\r\n                    <li key={index} className='text-primary'>\r\n                        <i className='fas fa-check'></i>\r\n                        {skill}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileItem;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/spinner/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n    useEffect(() => {\r\n        getProfiles();\r\n    }, [getProfiles]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? (\r\n                <Spinner />\r\n            ) : (\r\n                <Fragment>\r\n                    <h1 className='large text-primary'>Developers</h1>\r\n                    <p className='lead'>\r\n                        <i className='fab fa-connectdevelop'></i>Browse and connect with developers\r\n                    </p>\r\n                    <div className='profiles'>\r\n                        {profiles.length > 0 ? (\r\n                            profiles.map((profile) => (\r\n                                <ProfileItem key={profile._id} profile={profile} />\r\n                            ))\r\n                        ) : (\r\n                            <h4>No profile found </h4>\r\n                        )}\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        company: '',\r\n        location: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: '',\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const { title, company, location, from, to, current, description } = formData;\r\n\r\n    const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Add An Experience</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-code-branch'></i> Add any developer/programming positions that\r\n                you have had in the past\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form\r\n                className='form'\r\n                onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    addExperience(formData, history);\r\n                }}\r\n            >\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* Job Title'\r\n                        name='title'\r\n                        value={title}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* Company'\r\n                        name='company'\r\n                        value={company}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Location'\r\n                        name='location'\r\n                        value={location}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <h4>From Date</h4>\r\n                    <input type='date' name='from' value={from} onChange={(e) => onChange(e)} />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <p>\r\n                        <input\r\n                            type='checkbox'\r\n                            name='current'\r\n                            checked={current}\r\n                            value={current}\r\n                            onChange={(e) => {\r\n                                setFormData({ ...formData, current: !current });\r\n                                toggleDisabled(!toDateDisabled);\r\n                            }}\r\n                        />{' '}\r\n                        Current Job\r\n                    </p>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <h4>To Date</h4>\r\n                    <input\r\n                        type='date'\r\n                        name='to'\r\n                        value={to}\r\n                        onChange={(e) => onChange(e)}\r\n                        disabled={toDateDisabled ? 'disabled' : ''}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <textarea\r\n                        name='description'\r\n                        cols='30'\r\n                        rows='5'\r\n                        placeholder='Job Description'\r\n                        value={description}\r\n                        onChange={(e) => onChange(e)}\r\n                    ></textarea>\r\n                </div>\r\n                <input type='submit' className='btn btn-primary my-1' />\r\n                <a className='btn btn-light my-1' href='dashboard.html'>\r\n                    Go Back\r\n                </a>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n    addExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","import React, { Fragment, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        school: '',\r\n        degree: '',\r\n        fieldofstudy: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: '',\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const { school, degree, fieldofstudy, from, to, current, description } = formData;\r\n\r\n    const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Add Your Education</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-code-branch'></i> Add any school or bootcamp that you have\r\n                attended\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form\r\n                className='form'\r\n                onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    addEducation(formData, history);\r\n                }}\r\n            >\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* School or Bootcamp'\r\n                        name='school'\r\n                        value={school}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* Degree or Certificate'\r\n                        name='degree'\r\n                        value={degree}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Field of Study'\r\n                        name='fieldofstudy'\r\n                        value={fieldofstudy}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <h4>From Date</h4>\r\n                    <input type='date' name='from' value={from} onChange={(e) => onChange(e)} />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <p>\r\n                        <input\r\n                            type='checkbox'\r\n                            name='current'\r\n                            checked={current}\r\n                            value={current}\r\n                            onChange={(e) => {\r\n                                setFormData({ ...formData, current: !current });\r\n                                toggleDisabled(!toDateDisabled);\r\n                            }}\r\n                        />{' '}\r\n                        Still study here\r\n                    </p>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <h4>To Date</h4>\r\n                    <input\r\n                        type='date'\r\n                        name='to'\r\n                        value={to}\r\n                        onChange={(e) => onChange(e)}\r\n                        disabled={toDateDisabled ? 'disabled' : ''}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <textarea\r\n                        name='description'\r\n                        cols='30'\r\n                        rows='5'\r\n                        placeholder='Program Description'\r\n                        value={description}\r\n                        onChange={(e) => onChange(e)}\r\n                    ></textarea>\r\n                </div>\r\n                <input type='submit' className='btn btn-primary my-1' />\r\n                <a className='btn btn-light my-1' href='dashboard.html'>\r\n                    Go Back\r\n                </a>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n    addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n/**\r\n * render prop where we check to see if the user is not authenticated and not loading,\r\n * If they are authenticated then the component will load\r\n * @param {*} param0\r\n */\r\n// rest operate: take anything else that's passed in, if the path match, then call render function\r\nconst PrivateRoute = ({ component: Component, auth: { isAuthenticated, loading }, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) =>\r\n            !isAuthenticated && !loading ? <Redirect to='/login' /> : <Component {...props} />\r\n        }\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileTop = ({\r\n    profile: {\r\n        status,\r\n        company,\r\n        location,\r\n        website,\r\n        social,\r\n        user: { name, avatar },\r\n    },\r\n}) => {\r\n    return (\r\n        <div className='profile-top bg-primary p-2'>\r\n            <img className='round-img my-1' src={avatar} alt='' />\r\n            <h1 className='large'>{name}</h1>\r\n            <p className='lead'>\r\n                {status} {company && <span>at {company}</span>}\r\n            </p>\r\n            <p>{location && <span>{location}</span>}</p>\r\n            <div className='icons my-1'>\r\n                {website && (\r\n                    <a href={website} target='_blank' rel='noopener noreferrer'>\r\n                        <i className='fas fa-globe fa-2x'></i>\r\n                    </a>\r\n                )}\r\n                {social && social.twitter && (\r\n                    <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\r\n                        <i className='fab fa-twitter fa-2x'></i>\r\n                    </a>\r\n                )}\r\n                {social && social.facebook && (\r\n                    <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\r\n                        <i className='fab fa-facebook fa-2x'></i>\r\n                    </a>\r\n                )}\r\n                {social && social.linkedin && (\r\n                    <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\r\n                        <i className='fab fa-linkedin fa-2x'></i>\r\n                    </a>\r\n                )}\r\n                {social && social.youtube && (\r\n                    <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\r\n                        <i className='fab fa-youtube fa-2x'></i>\r\n                    </a>\r\n                )}\r\n                {social && social.instagram && (\r\n                    <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\r\n                        <i className='fab fa-instagram fa-2x'></i>\r\n                    </a>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileTop;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileAbout = ({\r\n    profile: {\r\n        bio,\r\n        skills,\r\n        user: { name },\r\n    },\r\n}) => {\r\n    return (\r\n        <div className='profile-about bg-light p-2'>\r\n            {bio && (\r\n                <Fragment>\r\n                    <h2 className='text-primary'>{name.trim().split(' ')[0]}'s Bio</h2>\r\n                    <p>{bio}</p>\r\n                    <div className='line'></div>\r\n                </Fragment>\r\n            )}\r\n\r\n            <h2 className='text-primary'>Skill Set</h2>\r\n            <div className='skills'>\r\n                {skills.map((skill, index) => (\r\n                    <div key={index} className='p-1'>\r\n                        <i className='fas fa-check'></i> {skill}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfileAbout.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileAbout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileExperience = ({\r\n    experience: { company, title, location, current, to, from, description },\r\n}) => (\r\n    <div>\r\n        <h3 className='text-dark'>{company}</h3>\r\n        <p>\r\n            <Moment format='YYYY/MM/DD'>{from}</Moment> -{' '}\r\n            {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n        </p>\r\n        <p>\r\n            <strong>Position: </strong> {title}\r\n        </p>\r\n        <p>\r\n            <strong>Description: </strong> {description}\r\n        </p>\r\n    </div>\r\n);\r\n\r\nProfileExperience.propTypes = {\r\n    experience: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileExperience;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileEducation = ({\r\n    education: { school, degree, fieldofstudy, current, to, from, description },\r\n}) => (\r\n    <div>\r\n        <h3 className='text-dark'>{school}</h3>\r\n        <p>\r\n            <Moment format='YYYY/MM/DD'>{from}</Moment> -{' '}\r\n            {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n        </p>\r\n        <p>\r\n            <strong>Degree: </strong> {degree}\r\n        </p>\r\n        <p>\r\n            <strong>Feild Of study: </strong> {fieldofstudy}\r\n        </p>\r\n        <p>\r\n            <strong>Description: </strong> {description}\r\n        </p>\r\n    </div>\r\n);\r\n\r\nProfileEducation.propTypes = {\r\n    education: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/spinner/Spinner';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username);\r\n    }, [getGithubRepos]);\r\n\r\n    return (\r\n        <div className='profile-github'>\r\n            <h2 className='text-primary my-1'>Github Repos</h2>\r\n            {repos === null ? (\r\n                <Spinner />\r\n            ) : (\r\n                repos.map((repo) => (\r\n                    <div key={repo.id} className='repo bg-white p-1 my-1'>\r\n                        <div>\r\n                            <h4>\r\n                                <a href={repo.html_url} target='_blank' rel='noopener noreferer'>\r\n                                    {repo.name}\r\n                                </a>\r\n                            </h4>\r\n                            <p>{repo.description}</p>\r\n                        </div>\r\n                        <div>\r\n                            <ul>\r\n                                <li className='badge badge-primary'>\r\n                                    Stars: {repo.stargazers_count}\r\n                                </li>\r\n                                <li className='badge badge-dark'>\r\n                                    Watchers: {repo.watchers_count}\r\n                                </li>\r\n                                <li className='badge badge-light'>Forks: {repo.forks_count}</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n    username: PropTypes.string.isRequired,\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/spinner/Spinner';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\nimport { getProfileById } from '../../actions/profile';\r\n\r\nconst Profile = ({ match, getProfileById, profile: { profile, loading }, auth }) => {\r\n    useEffect(() => {\r\n        getProfileById(match.params.id);\r\n    }, [getProfileById, match.params.id]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {profile === null || loading ? (\r\n                <Spinner />\r\n            ) : (\r\n                <Fragment>\r\n                    <Link to='/profiles' className='btn btn-light'>\r\n                        Back To Profile\r\n                    </Link>\r\n                    {auth.isAuthenticated &&\r\n                        auth.loading === false &&\r\n                        auth.user._id === profile.user._id && (\r\n                            <Link to='/edit-profile' className='btn btn-dark'>\r\n                                {' '}\r\n                                Edit Profile\r\n                            </Link>\r\n                        )}\r\n                    <div className='profile-grid my-1'>\r\n                        <ProfileTop profile={profile} />\r\n                        <ProfileAbout profile={profile} />\r\n                        <div className='profile-exp bg-white p-2'>\r\n                            <h2 className='text-primary'>Experience</h2>\r\n                            {profile.experience.length > 0 ? (\r\n                                <Fragment>\r\n                                    {profile.experience.map((experience) => (\r\n                                        <ProfileExperience\r\n                                            key={experience._id}\r\n                                            experience={experience}\r\n                                        />\r\n                                    ))}\r\n                                </Fragment>\r\n                            ) : (\r\n                                <h4>No experience credentials</h4>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className='profile-edu bg-white p-2'>\r\n                            <h2 className='text-primary'>Education</h2>\r\n                            {profile.education.length > 0 ? (\r\n                                <Fragment>\r\n                                    {profile.education.map((education) => (\r\n                                        <ProfileEducation\r\n                                            key={education._id}\r\n                                            education={education}\r\n                                        />\r\n                                    ))}\r\n                                </Fragment>\r\n                            ) : (\r\n                                <h4>No education credentials</h4>\r\n                            )}\r\n                        </div>\r\n\r\n                        {profile.githubusername && (\r\n                            <ProfileGithub username={profile.githubusername} />\r\n                        )}\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profile,\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\n\r\nconst PostItem = ({\r\n    addLike,\r\n    removeLike,\r\n    deletePost,\r\n    auth,\r\n    post: { _id, text, name, avatar, user, likes, comments, date },\r\n    showActions,\r\n}) => {\r\n    return (\r\n        <div className='post bg-white p-1 my-1'>\r\n            <div>\r\n                <Link to={`/profile/${user}`}>\r\n                    <img className='round-img' src={avatar} alt='' />\r\n                    <h4>{name}</h4>\r\n                </Link>\r\n            </div>\r\n            <div>\r\n                <p className='my-1'>{text}</p>\r\n                <p className='post-date'>\r\n                    Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n                </p>\r\n\r\n                {showActions && (\r\n                    <Fragment>\r\n                        <button\r\n                            onClick={(e) => addLike(_id)}\r\n                            type='button'\r\n                            className='btn btn-light'\r\n                        >\r\n                            <i className='fas fa-thumbs-up'></i>{' '}\r\n                            <span>\r\n                                {likes.length > 0 && (\r\n                                    <span className='comment-count'>{likes.length}</span>\r\n                                )}\r\n                            </span>\r\n                        </button>\r\n                        <button\r\n                            onClick={(e) => removeLike(_id)}\r\n                            type='button'\r\n                            className='btn btn-light'\r\n                        >\r\n                            <i className='fas fa-thumbs-down'></i>\r\n                        </button>\r\n                        <Link to={`/posts/${_id}`} className='btn btn-primary'>\r\n                            Discussion{' '}\r\n                            {comments.length > 0 && (\r\n                                <span className='comment-count'>{comments.length}</span>\r\n                            )}\r\n                        </Link>\r\n                        {!auth.loading && user === auth.user._id && (\r\n                            <button\r\n                                onClick={(e) => deletePost(_id)}\r\n                                type='button'\r\n                                className='btn btn-danger'\r\n                            >\r\n                                <i className='fas fa-times'></i>\r\n                            </button>\r\n                        )}\r\n                    </Fragment>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// To show the buttons at bottom\r\nPostItem.defaultProps = {\r\n    showActions: true,\r\n};\r\n\r\nPostItem.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    addLike: PropTypes.func.isRequired,\r\n    removeLike: PropTypes.func.isRequired,\r\n    deletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(PostItem);\r\n","import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    REMOVE_COMMENT,\r\n    ADD_COMMENT,\r\n} from './types';\r\nimport { setAlert } from './alert';\r\nimport axios from 'axios';\r\n\r\n// Get posts\r\nexport const getPosts = () => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get('/api/posts');\r\n\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status },\r\n        });\r\n    }\r\n};\r\n\r\n// GET_POST\r\nexport const getPost = (postId) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(`/api/posts/${postId}`);\r\n\r\n        dispatch({\r\n            type: GET_POST,\r\n            payload: res.data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status },\r\n        });\r\n    }\r\n};\r\n\r\n// Add like\r\nexport const addLike = (postId) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/like/${postId}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { postId, likes: res.data },\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status },\r\n        });\r\n    }\r\n};\r\n\r\n// Remove like\r\nexport const removeLike = (postId) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/unlike/${postId}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { postId, likes: res.data },\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status },\r\n        });\r\n    }\r\n};\r\n\r\n// Delete post\r\nexport const deletePost = (postId) => async (dispatch) => {\r\n    try {\r\n        await axios.delete(`/api/posts/${postId}`);\r\n\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            payload: postId,\r\n        });\r\n\r\n        dispatch(setAlert(' Post Removed', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status },\r\n        });\r\n    }\r\n};\r\n\r\n// Add post\r\nexport const addPost = (formData) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    };\r\n\r\n    try {\r\n        const res = await axios.post('/api/posts', formData, config);\r\n\r\n        dispatch({\r\n            type: ADD_POST,\r\n            payload: res.data,\r\n        });\r\n\r\n        dispatch(setAlert(' Post Created', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status },\r\n        });\r\n    }\r\n};\r\n\r\n// Add comment\r\nexport const addComment = (postId, formData) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    };\r\n\r\n    try {\r\n        const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\r\n\r\n        dispatch({\r\n            type: ADD_COMMENT,\r\n            payload: res.data,\r\n        });\r\n\r\n        dispatch(setAlert(' Comment Added', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status },\r\n        });\r\n    }\r\n};\r\n\r\n// Delete Comment\r\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\r\n    try {\r\n        await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n\r\n        dispatch({\r\n            type: REMOVE_COMMENT,\r\n            payload: commentId,\r\n        });\r\n\r\n        dispatch(setAlert(' Comment Removed', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status },\r\n        });\r\n    }\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <div className='post-form'>\r\n            <div className='bg-primary p'>\r\n                <h3>Say Something...</h3>\r\n            </div>\r\n            <form\r\n                className='form my-1'\r\n                onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    addPost({ text });\r\n                    setText('');\r\n                }}\r\n            >\r\n                <textarea\r\n                    name='text'\r\n                    cols='30'\r\n                    rows='5'\r\n                    placeholder='Create a post'\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                    required\r\n                ></textarea>\r\n                <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nPostForm.propTypes = {\r\n    addPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getPosts } from '../../actions/post';\r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm';\r\nimport Spinner from '../layout/spinner/Spinner';\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, [getPosts]);\r\n\r\n    return loading ? (\r\n        <Spinner />\r\n    ) : (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Posts</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user'></i> Welcome to the community\r\n            </p>\r\n            <PostForm />\r\n            <div className='posts'>\r\n                {posts.length > 0 && posts.map((post) => <PostItem key={post._id} post={post} />)}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nPosts.propTypes = {\r\n    getPosts: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../../actions/post';\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n    const [text, setText] = useState(' ');\r\n\r\n    return (\r\n        <div className='post-form'>\r\n            <div className='bg-primary p'>\r\n                <h3>Leave a Comment</h3>\r\n            </div>\r\n            <form\r\n                className='form my-1'\r\n                onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    addComment(postId, { text });\r\n                    setText('');\r\n                }}\r\n            >\r\n                <textarea\r\n                    name='text'\r\n                    cols='30'\r\n                    rows='5'\r\n                    placeholder='Create a comment '\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                    required\r\n                ></textarea>\r\n                <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    addComment: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addComment })(CommentForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteComment } from '../../actions/post';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\n\r\nconst CommentItem = ({\r\n    postId,\r\n    comment: { _id, text, name, avatar, user, date },\r\n    deleteComment,\r\n    auth,\r\n}) => {\r\n    return (\r\n        <div className='post bg-white p-1 my-1'>\r\n            <div>\r\n                <Link to={`/profile/${user}`}>\r\n                    <img className='round-img' src={avatar} alt='' />\r\n                    <h4>{name}</h4>\r\n                </Link>\r\n            </div>\r\n            <div>\r\n                <p className='my-1'>{text}</p>\r\n                <p className='post-date'>\r\n                    Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n                </p>\r\n                {!auth.loading && user === auth.user._id && (\r\n                    <button\r\n                        onClick={(e) => deleteComment(postId, _id)}\r\n                        type='button'\r\n                        className='btn btn-danger'\r\n                    >\r\n                        <i className='fas fa-times'></i>\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nCommentItem.propTypes = {\r\n    postId: PropTypes.string.isRequired,\r\n    comment: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    deleteComment: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/spinner/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from './CommentItem';\r\nimport { getPost } from '../../actions/post';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n    useEffect(() => {\r\n        getPost(match.params.id);\r\n    }, [getPost]);\r\n\r\n    return loading || post === null ? (\r\n        <Spinner />\r\n    ) : (\r\n        <Fragment>\r\n            <Link to='/posts' className='btn'>\r\n                Back To Posts\r\n            </Link>\r\n            <PostItem post={post} showActions={false} />\r\n            <CommentForm postId={post._id} />\r\n            <div className='comments'>\r\n                {post.comments.map((comment) => (\r\n                    <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n                ))}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nPost.propTypes = {\r\n    getPost: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\n// Reducer\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            // match alert id and return others\r\n            return state.filter((alert) => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    DELETE_ACCOUNT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null,\r\n};\r\n\r\n// Authentication reducer\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload,\r\n            };\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n            };\r\n        case AUTH_ERROR:\r\n        case REGISTER_FAIL:\r\n        case LOGIN_FAIL:\r\n        case DELETE_ACCOUNT:\r\n        case LOGOUT:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n    CLEAR_PROFILE,\r\n    GET_PROFILES,\r\n    GET_REPOS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case UPDATE_PROFILE:\r\n        case GET_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false,\r\n            };\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false,\r\n            };\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: payload,\r\n                loading: false,\r\n            };\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false,\r\n                profile: null,\r\n            };\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                repos: [],\r\n                loading: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false,\r\n            };\r\n        case GET_POST:\r\n            return {\r\n                ...state,\r\n                post: payload,\r\n                loading: false,\r\n            };\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [payload, ...state.posts],\r\n                loading: false,\r\n            };\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false,\r\n            };\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                // map through the state the posts, check if it matches the post id, return new state with all that post\r\n                posts: state.posts.map((post) =>\r\n                    post._id === payload.postId ? { ...post, likes: payload.likes } : post\r\n                ),\r\n                loading: false,\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                // return all posts except for the one that matches with postId\r\n                posts: state.posts.filter((post) => post._id !== payload),\r\n                loading: false,\r\n            };\r\n        case ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: { ...state.post, comments: payload },\r\n                loading: false,\r\n            };\r\n        case REMOVE_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: {\r\n                    ...state.post,\r\n                    comments: state.post.comments.filter((comment) => comment._id !== payload),\r\n                },\r\n                loading: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n    alert,\r\n    auth,\r\n    profile,\r\n    post,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Landing from './components/layout/Landing';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport Alert from './components/layout/Alert';\r\nimport setAuthToken from './utils/setAuthToken';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport CreateProfile from './components/profile-form/CreateProfile';\r\nimport EditProfile from './components/profile-form/EditProfile';\r\nimport Profiles from './components/profiles/Profiles';\r\nimport AddExperience from './components/profile-form/AddExperience';\r\nimport AddEducation from './components/profile-form/AddEducation';\r\nimport PrivateRoute from './components/routing/PrivateRoute';\r\nimport Profile from './components/profile/Profile';\r\nimport Posts from './components/posts/Posts';\r\nimport Post from './components/post/Post';\r\n// Redux\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport { loadUser } from './actions/auth';\r\n\r\nif (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n}\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        store.dispatch(loadUser());\r\n    }, []);\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <Router>\r\n                <Fragment>\r\n                    <Navbar />\r\n                    <Route exact path='/' component={Landing} />\r\n                    <section className='container'>\r\n                        <Alert />\r\n                        <Switch>\r\n                            <Route exact path='/register' component={Register} />\r\n                            <Route exact path='/login' component={Login} />\r\n                            <Route exact path='/profiles' component={Profiles} />\r\n                            <Route exact path='/profile/:id' component={Profile} />\r\n                            <PrivateRoute exact path='/dashboard' component={Dashboard} />\r\n                            <PrivateRoute exact path='/create-profile' component={CreateProfile} />\r\n                            <PrivateRoute exact path='/edit-profile' component={EditProfile} />\r\n                            <PrivateRoute exact path='/add-experience' component={AddExperience} />\r\n                            <PrivateRoute exact path='/add-education' component={AddEducation} />\r\n                            <PrivateRoute exact path='/posts' component={Posts} />\r\n                            <PrivateRoute exact path='/posts/:id' component={Post} />\r\n                        </Switch>\r\n                    </section>\r\n                </Fragment>\r\n            </Router>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}