{"version":3,"sources":["components/layout/spinner/spinner.module.css","actions/alert.js","actions/types.js","utils/api.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Login.js","components/auth/Register.js","components/layout/Alert.js","components/layout/spinner/Spinner.js","actions/profile.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-form/CreateProfile.js","components/profile-form/EditProfile.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile-form/AddExperience.js","components/profile-form/AddEducation.js","components/routing/PrivateRoute.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","api","axios","create","baseURL","process","headers","setAuthToken","token","defaults","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","href","guestLinks","login","email","password","body","JSON","stringify","post","errors","response","forEach","error","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","register","password2","alerts","alert","length","map","key","Spinner","styles","loader","getCurrentProfile","statusText","status","createProfile","history","edit","push","DashboardActions","deleteExperience","delete","experience","experiences","exp","_id","company","title","format","from","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","window","confirm","user","useEffect","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","toggleSocialInputs","join","social","ProfileItem","avatar","src","alt","slice","skill","index","getProfiles","profiles","addExperience","put","current","description","toDateDisabled","toggleDisabled","checked","disabled","cols","rows","addEducation","fieldofstudy","Component","component","rest","render","props","ProfileTop","rel","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","defaultProps","postId","addPost","setText","getPosts","posts","addComment","deleteComment","commentId","comment","getPost","initialState","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43830b46.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"spinner_loader__1GuEJ\",\"load6\":\"spinner_load6__1EBYb\",\"round\":\"spinner_round__2677z\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\n// Action alert\r\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\r\n    const id = uuidv4();\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg, alertType, id },\r\n    });\r\n\r\n    // 5 seconds it will dispatch remove alert\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\n\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const DELETE_ACCOUNT = 'DELETE_ACCOUNT';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_REPOS = 'GET_REPOS';\r\n\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const GET_POST = 'GET_POST';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\n","// utils/api.js\r\nimport axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport default api;\r\n","import api from './api';\r\n\r\n/**\r\n * Set token to header\r\n * @param {String} token\r\n */\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    api.defaults.headers.common['x-auth-token'] = token;\r\n  } else {\r\n    delete api.defaults.headers.common['x-auth-token'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport api from '../utils/api';\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await api.get('/auth');\r\n    dispatch({ type: USER_LOADED, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({ type: AUTH_ERROR });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await api.post('/users', body);\r\n    dispatch({ type: REGISTER_SUCCESS, payload: res.data });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({ type: REGISTER_FAIL });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await api.post('/auth', body);\r\n    dispatch({ type: LOGIN_SUCCESS, payload: res.data });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({ type: LOGIN_FAIL });\r\n  }\r\n};\r\n\r\n// Logout\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n    const authLinks = (\r\n        <ul>\r\n            <li>\r\n                <Link to='/profiles'>Developers</Link>\r\n            </li>\r\n            <li>\r\n                <Link to='/posts'>Posts</Link>\r\n            </li>\r\n            <li>\r\n                <Link to='/dashboard'>\r\n                    <i className='fas fa-code' /> <span className='hide-sm'>Dashboard</span>\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <a onClick={logout} href='/#!'>\r\n                    <i className='fas fa-sing-out-a'></i> <span className='hide-sm'>Logout</span>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    );\r\n\r\n    const guestLinks = (\r\n        <ul>\r\n            <li>\r\n                <Link to='/profiles'>Developers</Link>\r\n            </li>\r\n            <li>\r\n                <Link to='/register'>Register</Link>\r\n            </li>\r\n            <li>\r\n                <Link to='/login'>Login</Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n\r\n    return (\r\n        <nav className='navbar bg-dark'>\r\n            <h1>\r\n                <Link to='/'>\r\n                    <i className='fas fa-code'></i> DevPortfolio\r\n                </Link>\r\n            </h1>\r\n            {!loading && <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>}\r\n        </nav>\r\n    );\r\n};\r\n\r\nNavbar.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/dashboard' />;\r\n    }\r\n\r\n    return (\r\n        <section className='landing'>\r\n            <div className='dark-overlay'>\r\n                <div className='landing-inner'>\r\n                    <h1 className='x-large'>Developer Portfolio</h1>\r\n                    <p className='lead'>\r\n                        Create a developer profile/portfolio, share posts and get help from other\r\n                        developers\r\n                    </p>\r\n                    <div className='buttons'>\r\n                        <Link to='/register' className='btn btn-primary'>\r\n                            Sign Up\r\n                        </Link>\r\n                        <Link to='/login' className='btn btn-light'>\r\n                            Login\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nLanding.propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        login(email, password);\r\n    };\r\n\r\n    // Redirect if logged in\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/dashboard' />;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Sign In</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user'></i> Sign Into Your Account\r\n            </p>\r\n            <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='email'\r\n                        placeholder='Email Address'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        name='password'\r\n                        minLength='6'\r\n                        value={password}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <input type='submit' className='btn btn-primary' value='Login' />\r\n            </form>\r\n            <p className='my-1'>\r\n                Don't have an account? <Link to='/register'>Sign Up</Link>\r\n            </p>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ isAuthenticated: state.auth.isAuthenticated });\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\n// destructure setAlert action\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: '',\r\n    });\r\n\r\n    const { name, email, password, password2 } = formData;\r\n\r\n    const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (password !== password2) {\r\n            setAlert('Passwords do not match', 'danger');\r\n        } else {\r\n            register({ name, email, password });\r\n        }\r\n    };\r\n\r\n    // Redirect if logged in\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/dashboard' />;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Sign Up</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user'></i> Create Your Account\r\n            </p>\r\n            <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Name'\r\n                        name='name'\r\n                        value={name}\r\n                        onChange={(e) => onChange(e)}\r\n                        // required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='email'\r\n                        placeholder='Email Address'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={(e) => onChange(e)}\r\n                        // required\r\n                    />\r\n                    <small className='form-text'>\r\n                        {/* This site uses Gravatar so if you want a profile image, use a Gravatar email */}\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        name='password'\r\n                        minLength='6'\r\n                        value={password}\r\n                        onChange={(e) => onChange(e)}\r\n                        // required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        name='password2'\r\n                        minLength='6'\r\n                        value={password2}\r\n                        onChange={(e) => onChange(e)}\r\n                        // required\r\n                    />\r\n                </div>\r\n                <input type='submit' className='btn btn-primary' value='Register' />\r\n            </form>\r\n            <p className='my-1'>\r\n                Already have an account? <Link to='/login'>Sign In</Link>\r\n            </p>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ isAuthenticated: state.auth.isAuthenticated });\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Alert = ({ alerts }) =>\r\n    alerts !== null &&\r\n    alerts.length > 0 &&\r\n    alerts.map((alert) => (\r\n        <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n            {alert.msg}\r\n        </div>\r\n    ));\r\n\r\nAlert.propTypes = {\r\n    alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React from 'react';\r\nimport styles from './spinner.module.css';\r\n\r\nconst Spinner = () => <div className={styles.loader}>Loading...</div>;\r\n\r\nexport default Spinner;\r\n","import { setAlert } from './alert';\r\nimport {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  DELETE_ACCOUNT,\r\n  CLEAR_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS,\r\n} from './types';\r\nimport api from '../utils/api';\r\n\r\n// Get current user profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await api.get('/profile/me');\r\n    dispatch({ type: GET_PROFILE, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({ type: PROFILE_ERROR, payload: { msg: err.response.statusText, status: err.response.status } });\r\n  }\r\n};\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n\r\n  try {\r\n    const res = await api.get('/profile');\r\n    dispatch({ type: GET_PROFILES, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({ type: PROFILE_ERROR, payload: { msg: err.response.statusText, status: err.response.status } });\r\n  }\r\n};\r\n\r\n// Get profile by ID\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(`/profile/user/${userId}`);\r\n    dispatch({ type: GET_PROFILE, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({ type: PROFILE_ERROR, payload: { msg: err.response.statusText, status: err.response.status } });\r\n  }\r\n};\r\n\r\n// Get GitHub repos\r\nexport const getGithubRepos = (username) => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(`/profile/github/${username}`);\r\n    dispatch({ type: GET_REPOS, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({ type: PROFILE_ERROR, payload: { msg: err.response.statusText, status: err.response.status } });\r\n  }\r\n};\r\n\r\n// Create or update profile\r\nexport const createProfile = (formData, history, edit = false) => async (dispatch) => {\r\n  try {\r\n    const res = await api.post('/profile', formData);\r\n    dispatch({ type: GET_PROFILE, payload: res.data });\r\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n    if (!edit) {\r\n      history.push('/dashboard');\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({ type: PROFILE_ERROR, payload: { msg: err.response.statusText, status: err.response.status } });\r\n  }\r\n};\r\n\r\n// Add experience\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put('/profile/experience', formData);\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\r\n    dispatch(setAlert('Experience Added', 'success'));\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({ type: PROFILE_ERROR, payload: { msg: err.response.statusText, status: err.response.status } });\r\n  }\r\n};\r\n\r\n// Add education\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put('/profile/education', formData);\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\r\n    dispatch(setAlert('Education Added', 'success'));\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({ type: PROFILE_ERROR, payload: { msg: err.response.statusText, status: err.response.status } });\r\n  }\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.delete(`/profile/experience/${id}`);\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\r\n    dispatch(setAlert('Experience Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({ type: PROFILE_ERROR, payload: { msg: err.response.statusText, status: err.response.status } });\r\n  }\r\n};\r\n\r\n// Delete education\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.delete(`/profile/education/${id}`);\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\r\n    dispatch(setAlert('Education Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({ type: PROFILE_ERROR, payload: { msg: err.response.statusText, status: err.response.status } });\r\n  }\r\n};\r\n\r\n// Delete account\r\nexport const deleteAccount = () => async (dispatch) => {\r\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\r\n    try {\r\n      await api.delete('/profile');\r\n      dispatch({ type: CLEAR_PROFILE });\r\n      dispatch({ type: DELETE_ACCOUNT });\r\n      dispatch(setAlert('Your account has been permanently deleted', 'danger'));\r\n    } catch (err) {\r\n      dispatch({ type: PROFILE_ERROR, payload: { msg: err.response.statusText, status: err.response.status } });\r\n    }\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const DashboardActions = () => {\r\n    return (\r\n        <div className='dash-buttons'>\r\n            <Link to='/edit-profile' className='btn btn-light'>\r\n                <i className='fas fa-user-circle text-primary'></i> Edit Profile\r\n            </Link>\r\n            <Link to='/add-experience' className='btn btn-light'>\r\n                <i className='fab fa-black-tie text-primary'></i> Add Experience\r\n            </Link>\r\n            <Link to='/add-education' className='btn btn-light'>\r\n                <i className='fas fa-graduation-cap text-primary'></i> Add Education\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteExperience } from '../../actions/profile';\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n    const experiences = experience.map((exp) => (\r\n        <tr key={exp._id}>\r\n            <td>{exp.company}</td>\r\n            <td className='hide-sm'>{exp.title}</td>\r\n            <td>\r\n                <Moment format='YYYY/MM/DD'>{exp.from}</Moment> -{' '}\r\n                {exp.to === null ? ' Now' : <Moment format='YYYY/MM/DD'>{exp.to}</Moment>}\r\n            </td>\r\n            <td>\r\n                <button className='btn btn-danger' onClick={() => deleteExperience(exp._id)}>\r\n                    Delete\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    ));\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2 className='my-2'>Experience Credentials</h2>\r\n            <table className='table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Company</th>\r\n                        <th className='hide-sm'>Title</th>\r\n                        <th className='hide-sm'>Years</th>\r\n                        <th />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{experiences}</tbody>\r\n            </table>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nExperience.propTypes = {\r\n    experience: PropTypes.array.isRequired,\r\n    deleteExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteEducation } from '../../actions/profile';\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n    const educations = education.map((edu) => (\r\n        <tr key={edu._id}>\r\n            <td>{edu.school}</td>\r\n            <td className='hide-sm'>{edu.degree}</td>\r\n            <td>\r\n                <Moment format='YYYY/MM/DD'>{edu.from}</Moment> -{' '}\r\n                {edu.to === null ? ' Now' : <Moment format='YYYY/MM/DD'>{edu.to}</Moment>}\r\n            </td>\r\n            <td>\r\n                <button className='btn btn-danger' onClick={() => deleteEducation(edu._id)}>\r\n                    Delete\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    ));\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2 className='my-2'>Education Credentials</h2>\r\n            <table className='table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>School</th>\r\n                        <th className='hide-sm'>Degree</th>\r\n                        <th className='hide-sm'>Years</th>\r\n                        <th />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{educations}</tbody>\r\n            </table>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nEducation.propTypes = {\r\n    education: PropTypes.array.isRequired,\r\n    deleteEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/spinner/Spinner';\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\r\nimport { DashboardActions } from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\n\r\n//racfp\r\nconst Dashboard = ({\r\n    getCurrentProfile,\r\n    auth: { user },\r\n    profile: { profile, loading },\r\n    deleteAccount,\r\n}) => {\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n    }, [getCurrentProfile]);\r\n\r\n    return loading && profile === null ? (\r\n        <Spinner />\r\n    ) : (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Dashboard</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user'></i> Welbome {user && user.name}\r\n            </p>\r\n            {profile !== null ? (\r\n                <Fragment>\r\n                    <DashboardActions />\r\n                    <Experience experience={profile.experience} />\r\n                    <Education education={profile.education} />\r\n\r\n                    <div className='my-2'>\r\n                        <button className='btn btn-danger' onClick={() => deleteAccount()}>\r\n                            <i className='fas fa-user-minus'></i> Delete My Account\r\n                        </button>\r\n                    </div>\r\n                </Fragment>\r\n            ) : (\r\n                <Fragment>\r\n                    <p>You have not yet setup a profile, plseae add some info</p>\r\n                    <Link to='/create-profile' className='btn btn-primary my-1'>\r\n                        Create Profile\r\n                    </Link>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard);\r\n","import React, { useState, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: '',\r\n    });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram,\r\n    } = formData;\r\n\r\n    const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        createProfile(formData, history);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Create Your Profile</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user'></i> Let's get some information to make your profile\r\n                stand out\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n                        <option value='0'>* Select Professional Status</option>\r\n                        <option value='Developer'>Developer</option>\r\n                        <option value='Junior Developer'>Junior Developer</option>\r\n                        <option value='Senior Developer'>Senior Developer</option>\r\n                        <option value='Manager'>Manager</option>\r\n                        <option value='Student or Learning'>Student or Learning</option>\r\n                        <option value='Instructor'>Instructor or Teacher</option>\r\n                        <option value='Intern'>Intern</option>\r\n                        <option value='Other'>Other</option>\r\n                    </select>\r\n                    <small className='form-text'>\r\n                        Give us an idea of where you are at in your career\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Company'\r\n                        name='company'\r\n                        value={company}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        Could be your own company or one you work for\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Website'\r\n                        name='website'\r\n                        value={website}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>Could be your own or a company website</small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Location'\r\n                        name='location'\r\n                        value={location}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>City & state suggested (eg. Boston, MA)</small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* Skills'\r\n                        name='skills'\r\n                        value={skills}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Github Username'\r\n                        name='githubusername'\r\n                        value={githubusername}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        If you want your latest repos and a Github link, include your username\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <textarea\r\n                        placeholder='A short bio of yourself'\r\n                        name='bio'\r\n                        value={bio}\r\n                        onChange={(e) => onChange(e)}\r\n                    ></textarea>\r\n                    <small className='form-text'>Tell us a little about yourself</small>\r\n                </div>\r\n\r\n                <div className='my-2'>\r\n                    <button\r\n                        onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n                        type='button'\r\n                        className='btn btn-light'\r\n                    >\r\n                        Add Social Network Links\r\n                    </button>\r\n                    <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialInputs && (\r\n                    <Fragment>\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-twitter fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Twitter URL'\r\n                                name='twitter'\r\n                                value={twitter}\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-facebook fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Facebook URL'\r\n                                name='facebook'\r\n                                value={facebook}\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-youtube fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='YouTube URL'\r\n                                name='youtube'\r\n                                value={youtube}\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-linkedin fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Linkedin URL'\r\n                                name='linkedin'\r\n                                value={linkedin}\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-instagram fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Instagram URL'\r\n                                name='instagram'\r\n                                value={instagram}\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n\r\n                <input type='submit' className='btn btn-primary my-1' />\r\n                <Link className='btn btn-light my-1' to='dashboard'>\r\n                    Go Back\r\n                </Link>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","import React, { useState, Fragment, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n    profile: { profile, loading },\r\n    createProfile,\r\n    getCurrentProfile,\r\n    history,\r\n}) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: '',\r\n    });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n\r\n        // check loading or no profile, then blank. If not loading or have profile, then fill it\r\n        setFormData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n            instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n        });\r\n    }, [loading, getCurrentProfile]);\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram,\r\n    } = formData;\r\n\r\n    const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        createProfile(formData, history, true);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Create Your Profile</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user'></i> Let's get some information to make your profile\r\n                stand out\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n                        <option value='0'>* Select Professional Status</option>\r\n                        <option value='Developer'>Developer</option>\r\n                        <option value='Junior Developer'>Junior Developer</option>\r\n                        <option value='Senior Developer'>Senior Developer</option>\r\n                        <option value='Manager'>Manager</option>\r\n                        <option value='Student or Learning'>Student or Learning</option>\r\n                        <option value='Instructor'>Instructor or Teacher</option>\r\n                        <option value='Intern'>Intern</option>\r\n                        <option value='Other'>Other</option>\r\n                    </select>\r\n                    <small className='form-text'>\r\n                        Give us an idea of where you are at in your career\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Company'\r\n                        name='company'\r\n                        value={company}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        Could be your own company or one you work for\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Website'\r\n                        name='website'\r\n                        value={website}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>Could be your own or a company website</small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Location'\r\n                        name='location'\r\n                        value={location}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>City & state suggested (eg. Boston, MA)</small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* Skills'\r\n                        name='skills'\r\n                        value={skills}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Github Username'\r\n                        name='githubusername'\r\n                        value={githubusername}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        If you want your latest repos and a Github link, include your username\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <textarea\r\n                        placeholder='A short bio of yourself'\r\n                        name='bio'\r\n                        value={bio}\r\n                        onChange={(e) => onChange(e)}\r\n                    ></textarea>\r\n                    <small className='form-text'>Tell us a little about yourself</small>\r\n                </div>\r\n\r\n                <div className='my-2'>\r\n                    <button\r\n                        onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n                        type='button'\r\n                        className='btn btn-light'\r\n                    >\r\n                        Add Social Network Links\r\n                    </button>\r\n                    <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialInputs && (\r\n                    <Fragment>\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-twitter fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Twitter URL'\r\n                                name='twitter'\r\n                                value={twitter}\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-facebook fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Facebook URL'\r\n                                name='facebook'\r\n                                value={facebook}\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-youtube fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='YouTube URL'\r\n                                name='youtube'\r\n                                value={youtube}\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-linkedin fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Linkedin URL'\r\n                                name='linkedin'\r\n                                value={linkedin}\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group social-input'>\r\n                            <i className='fab fa-instagram fa-2x'></i>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Instagram URL'\r\n                                name='instagram'\r\n                                value={instagram}\r\n                                onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n\r\n                <input type='submit' className='btn btn-primary my-1' />\r\n                <Link className='btn btn-light my-1' to='dashboard'>\r\n                    Go Back\r\n                </Link>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n    withRouter(EditProfile)\r\n);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileItem = ({\r\n    profile: {\r\n        user: { _id, name, avatar },\r\n        status,\r\n        company,\r\n        location,\r\n        skills,\r\n    },\r\n}) => {\r\n    return (\r\n        <div className='profile bg-light'>\r\n            <img src={avatar} alt='' className='round-img' />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>\r\n                    {status} {company && <span> at {company}</span>}\r\n                </p>\r\n                <p className='my-1'>{location && <span>{location}</span>}</p>\r\n                <Link to={`/profile/${_id}`} className='btn btn-primary'>\r\n                    View Profile\r\n                </Link>\r\n            </div>\r\n            <ul>\r\n                {skills.slice(0, 4).map((skill, index) => (\r\n                    <li key={index} className='text-primary'>\r\n                        <i className='fas fa-check'></i>\r\n                        {skill}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileItem;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/spinner/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n    useEffect(() => {\r\n        getProfiles();\r\n    }, [getProfiles]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? (\r\n                <Spinner />\r\n            ) : (\r\n                <Fragment>\r\n                    <h1 className='large text-primary'>Developers</h1>\r\n                    <p className='lead'>\r\n                        <i className='fab fa-connectdevelop'></i>Browse and connect with developers\r\n                    </p>\r\n                    <div className='profiles'>\r\n                        {profiles.length > 0 ? (\r\n                            profiles.map((profile) => (\r\n                                <ProfileItem key={profile._id} profile={profile} />\r\n                            ))\r\n                        ) : (\r\n                            <h4>No profile found </h4>\r\n                        )}\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        company: '',\r\n        location: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: '',\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const { title, company, location, from, to, current, description } = formData;\r\n\r\n    const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Add An Experience</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-code-branch'></i> Add any developer/programming positions that\r\n                you have had in the past\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form\r\n                className='form'\r\n                onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    addExperience(formData, history);\r\n                }}\r\n            >\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* Job Title'\r\n                        name='title'\r\n                        value={title}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* Company'\r\n                        name='company'\r\n                        value={company}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Location'\r\n                        name='location'\r\n                        value={location}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <h4>From Date</h4>\r\n                    <input type='date' name='from' value={from} onChange={(e) => onChange(e)} />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <p>\r\n                        <input\r\n                            type='checkbox'\r\n                            name='current'\r\n                            checked={current}\r\n                            value={current}\r\n                            onChange={(e) => {\r\n                                setFormData({ ...formData, current: !current });\r\n                                toggleDisabled(!toDateDisabled);\r\n                            }}\r\n                        />{' '}\r\n                        Current Job\r\n                    </p>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <h4>To Date</h4>\r\n                    <input\r\n                        type='date'\r\n                        name='to'\r\n                        value={to}\r\n                        onChange={(e) => onChange(e)}\r\n                        disabled={toDateDisabled ? 'disabled' : ''}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <textarea\r\n                        name='description'\r\n                        cols='30'\r\n                        rows='5'\r\n                        placeholder='Job Description'\r\n                        value={description}\r\n                        onChange={(e) => onChange(e)}\r\n                    ></textarea>\r\n                </div>\r\n                <input type='submit' className='btn btn-primary my-1' />\r\n                <a className='btn btn-light my-1' href='dashboard.html'>\r\n                    Go Back\r\n                </a>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n    addExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","import React, { Fragment, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        school: '',\r\n        degree: '',\r\n        fieldofstudy: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: '',\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const { school, degree, fieldofstudy, from, to, current, description } = formData;\r\n\r\n    const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Add Your Education</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-code-branch'></i> Add any school or bootcamp that you have\r\n                attended\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form\r\n                className='form'\r\n                onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    addEducation(formData, history);\r\n                }}\r\n            >\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* School or Bootcamp'\r\n                        name='school'\r\n                        value={school}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='* Degree or Certificate'\r\n                        name='degree'\r\n                        value={degree}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Field of Study'\r\n                        name='fieldofstudy'\r\n                        value={fieldofstudy}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <h4>From Date</h4>\r\n                    <input type='date' name='from' value={from} onChange={(e) => onChange(e)} />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <p>\r\n                        <input\r\n                            type='checkbox'\r\n                            name='current'\r\n                            checked={current}\r\n                            value={current}\r\n                            onChange={(e) => {\r\n                                setFormData({ ...formData, current: !current });\r\n                                toggleDisabled(!toDateDisabled);\r\n                            }}\r\n                        />{' '}\r\n                        Still study here\r\n                    </p>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <h4>To Date</h4>\r\n                    <input\r\n                        type='date'\r\n                        name='to'\r\n                        value={to}\r\n                        onChange={(e) => onChange(e)}\r\n                        disabled={toDateDisabled ? 'disabled' : ''}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <textarea\r\n                        name='description'\r\n                        cols='30'\r\n                        rows='5'\r\n                        placeholder='Program Description'\r\n                        value={description}\r\n                        onChange={(e) => onChange(e)}\r\n                    ></textarea>\r\n                </div>\r\n                <input type='submit' className='btn btn-primary my-1' />\r\n                <a className='btn btn-light my-1' href='dashboard.html'>\r\n                    Go Back\r\n                </a>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n    addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n/**\r\n * render prop where we check to see if the user is not authenticated and not loading,\r\n * If they are authenticated then the component will load\r\n * @param {*} param0\r\n */\r\n// rest operate: take anything else that's passed in, if the path match, then call render function\r\nconst PrivateRoute = ({ component: Component, auth: { isAuthenticated, loading }, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) =>\r\n            !isAuthenticated && !loading ? <Redirect to='/login' /> : <Component {...props} />\r\n        }\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileTop = ({\r\n    profile: {\r\n        status,\r\n        company,\r\n        location,\r\n        website,\r\n        social,\r\n        user: { name, avatar },\r\n    },\r\n}) => {\r\n    return (\r\n        <div className='profile-top bg-primary p-2'>\r\n            <img className='round-img my-1' src={avatar} alt='' />\r\n            <h1 className='large'>{name}</h1>\r\n            <p className='lead'>\r\n                {status} {company && <span>at {company}</span>}\r\n            </p>\r\n            <p>{location && <span>{location}</span>}</p>\r\n            <div className='icons my-1'>\r\n                {website && (\r\n                    <a href={website} target='_blank' rel='noopener noreferrer'>\r\n                        <i className='fas fa-globe fa-2x'></i>\r\n                    </a>\r\n                )}\r\n                {social && social.twitter && (\r\n                    <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\r\n                        <i className='fab fa-twitter fa-2x'></i>\r\n                    </a>\r\n                )}\r\n                {social && social.facebook && (\r\n                    <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\r\n                        <i className='fab fa-facebook fa-2x'></i>\r\n                    </a>\r\n                )}\r\n                {social && social.linkedin && (\r\n                    <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\r\n                        <i className='fab fa-linkedin fa-2x'></i>\r\n                    </a>\r\n                )}\r\n                {social && social.youtube && (\r\n                    <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\r\n                        <i className='fab fa-youtube fa-2x'></i>\r\n                    </a>\r\n                )}\r\n                {social && social.instagram && (\r\n                    <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\r\n                        <i className='fab fa-instagram fa-2x'></i>\r\n                    </a>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileTop;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileAbout = ({\r\n    profile: {\r\n        bio,\r\n        skills,\r\n        user: { name },\r\n    },\r\n}) => {\r\n    return (\r\n        <div className='profile-about bg-light p-2'>\r\n            {bio && (\r\n                <Fragment>\r\n                    <h2 className='text-primary'>{name.trim().split(' ')[0]}'s Bio</h2>\r\n                    <p>{bio}</p>\r\n                    <div className='line'></div>\r\n                </Fragment>\r\n            )}\r\n\r\n            <h2 className='text-primary'>Skill Set</h2>\r\n            <div className='skills'>\r\n                {skills.map((skill, index) => (\r\n                    <div key={index} className='p-1'>\r\n                        <i className='fas fa-check'></i> {skill}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfileAbout.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileAbout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileExperience = ({\r\n    experience: { company, title, location, current, to, from, description },\r\n}) => (\r\n    <div>\r\n        <h3 className='text-dark'>{company}</h3>\r\n        <p>\r\n            <Moment format='YYYY/MM/DD'>{from}</Moment> -{' '}\r\n            {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n        </p>\r\n        <p>\r\n            <strong>Position: </strong> {title}\r\n        </p>\r\n        <p>\r\n            <strong>Description: </strong> {description}\r\n        </p>\r\n    </div>\r\n);\r\n\r\nProfileExperience.propTypes = {\r\n    experience: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileExperience;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileEducation = ({\r\n    education: { school, degree, fieldofstudy, current, to, from, description },\r\n}) => (\r\n    <div>\r\n        <h3 className='text-dark'>{school}</h3>\r\n        <p>\r\n            <Moment format='YYYY/MM/DD'>{from}</Moment> -{' '}\r\n            {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n        </p>\r\n        <p>\r\n            <strong>Degree: </strong> {degree}\r\n        </p>\r\n        <p>\r\n            <strong>Feild Of study: </strong> {fieldofstudy}\r\n        </p>\r\n        <p>\r\n            <strong>Description: </strong> {description}\r\n        </p>\r\n    </div>\r\n);\r\n\r\nProfileEducation.propTypes = {\r\n    education: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/spinner/Spinner';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username);\r\n    }, [getGithubRepos]);\r\n\r\n    return (\r\n        <div className='profile-github'>\r\n            <h2 className='text-primary my-1'>Github Repos</h2>\r\n            {repos === null ? (\r\n                <Spinner />\r\n            ) : (\r\n                repos.map((repo) => (\r\n                    <div key={repo.id} className='repo bg-white p-1 my-1'>\r\n                        <div>\r\n                            <h4>\r\n                                <a href={repo.html_url} target='_blank' rel='noopener noreferer'>\r\n                                    {repo.name}\r\n                                </a>\r\n                            </h4>\r\n                            <p>{repo.description}</p>\r\n                        </div>\r\n                        <div>\r\n                            <ul>\r\n                                <li className='badge badge-primary'>\r\n                                    Stars: {repo.stargazers_count}\r\n                                </li>\r\n                                <li className='badge badge-dark'>\r\n                                    Watchers: {repo.watchers_count}\r\n                                </li>\r\n                                <li className='badge badge-light'>Forks: {repo.forks_count}</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n    username: PropTypes.string.isRequired,\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/spinner/Spinner';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\nimport { getProfileById } from '../../actions/profile';\r\n\r\nconst Profile = ({ match, getProfileById, profile: { profile, loading }, auth }) => {\r\n    useEffect(() => {\r\n        getProfileById(match.params.id);\r\n    }, [getProfileById, match.params.id]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {profile === null || loading ? (\r\n                <Spinner />\r\n            ) : (\r\n                <Fragment>\r\n                    <Link to='/profiles' className='btn btn-light'>\r\n                        Back To Profile\r\n                    </Link>\r\n                    {auth.isAuthenticated &&\r\n                        auth.loading === false &&\r\n                        auth.user._id === profile.user._id && (\r\n                            <Link to='/edit-profile' className='btn btn-dark'>\r\n                                {' '}\r\n                                Edit Profile\r\n                            </Link>\r\n                        )}\r\n                    <div className='profile-grid my-1'>\r\n                        <ProfileTop profile={profile} />\r\n                        <ProfileAbout profile={profile} />\r\n                        <div className='profile-exp bg-white p-2'>\r\n                            <h2 className='text-primary'>Experience</h2>\r\n                            {profile.experience.length > 0 ? (\r\n                                <Fragment>\r\n                                    {profile.experience.map((experience) => (\r\n                                        <ProfileExperience\r\n                                            key={experience._id}\r\n                                            experience={experience}\r\n                                        />\r\n                                    ))}\r\n                                </Fragment>\r\n                            ) : (\r\n                                <h4>No experience credentials</h4>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className='profile-edu bg-white p-2'>\r\n                            <h2 className='text-primary'>Education</h2>\r\n                            {profile.education.length > 0 ? (\r\n                                <Fragment>\r\n                                    {profile.education.map((education) => (\r\n                                        <ProfileEducation\r\n                                            key={education._id}\r\n                                            education={education}\r\n                                        />\r\n                                    ))}\r\n                                </Fragment>\r\n                            ) : (\r\n                                <h4>No education credentials</h4>\r\n                            )}\r\n                        </div>\r\n\r\n                        {profile.githubusername && (\r\n                            <ProfileGithub username={profile.githubusername} />\r\n                        )}\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profile,\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\n\r\nconst PostItem = ({\r\n    addLike,\r\n    removeLike,\r\n    deletePost,\r\n    auth,\r\n    post: { _id, text, name, avatar, user, likes, comments, date },\r\n    showActions,\r\n}) => {\r\n    return (\r\n        <div className='post bg-white p-1 my-1'>\r\n            <div>\r\n                <Link to={`/profile/${user}`}>\r\n                    <img className='round-img' src={avatar} alt='' />\r\n                    <h4>{name}</h4>\r\n                </Link>\r\n            </div>\r\n            <div>\r\n                <p className='my-1'>{text}</p>\r\n                <p className='post-date'>\r\n                    Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n                </p>\r\n\r\n                {showActions && (\r\n                    <Fragment>\r\n                        <button\r\n                            onClick={(e) => addLike(_id)}\r\n                            type='button'\r\n                            className='btn btn-light'\r\n                        >\r\n                            <i className='fas fa-thumbs-up'></i>{' '}\r\n                            <span>\r\n                                {likes.length > 0 && (\r\n                                    <span className='comment-count'>{likes.length}</span>\r\n                                )}\r\n                            </span>\r\n                        </button>\r\n                        <button\r\n                            onClick={(e) => removeLike(_id)}\r\n                            type='button'\r\n                            className='btn btn-light'\r\n                        >\r\n                            <i className='fas fa-thumbs-down'></i>\r\n                        </button>\r\n                        <Link to={`/posts/${_id}`} className='btn btn-primary'>\r\n                            Discussion{' '}\r\n                            {comments.length > 0 && (\r\n                                <span className='comment-count'>{comments.length}</span>\r\n                            )}\r\n                        </Link>\r\n                        {!auth.loading && user === auth.user._id && (\r\n                            <button\r\n                                onClick={(e) => deletePost(_id)}\r\n                                type='button'\r\n                                className='btn btn-danger'\r\n                            >\r\n                                <i className='fas fa-times'></i>\r\n                            </button>\r\n                        )}\r\n                    </Fragment>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// To show the buttons at bottom\r\nPostItem.defaultProps = {\r\n    showActions: true,\r\n};\r\n\r\nPostItem.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    addLike: PropTypes.func.isRequired,\r\n    removeLike: PropTypes.func.isRequired,\r\n    deletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(PostItem);\r\n","import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    REMOVE_COMMENT,\r\n    ADD_COMMENT,\r\n  } from './types';\r\n  import { setAlert } from './alert';\r\n  import api from '../utils/api';\r\n  \r\n  // Get posts\r\n  export const getPosts = () => async (dispatch) => {\r\n    try {\r\n      const res = await api.get('/posts');\r\n      dispatch({ type: GET_POSTS, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: POST_ERROR, payload: { msg: err.response.statusText, status: err.response.status } });\r\n    }\r\n  };\r\n  \r\n  // Get post by ID\r\n  export const getPost = (postId) => async (dispatch) => {\r\n    try {\r\n      const res = await api.get(`/posts/${postId}`);\r\n      dispatch({ type: GET_POST, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: POST_ERROR, payload: { msg: err.response.statusText, status: err.response.status } });\r\n    }\r\n  };\r\n  \r\n  // Add like\r\n  export const addLike = (postId) => async (dispatch) => {\r\n    try {\r\n      const res = await api.put(`/posts/like/${postId}`);\r\n      dispatch({ type: UPDATE_LIKES, payload: { postId, likes: res.data } });\r\n    } catch (err) {\r\n      dispatch({ type: POST_ERROR, payload: { msg: err.response.statusText, status: err.response.status } });\r\n    }\r\n  };\r\n  \r\n  // Remove like\r\n  export const removeLike = (postId) => async (dispatch) => {\r\n    try {\r\n      const res = await api.put(`/posts/unlike/${postId}`);\r\n      dispatch({ type: UPDATE_LIKES, payload: { postId, likes: res.data } });\r\n    } catch (err) {\r\n      dispatch({ type: POST_ERROR, payload: { msg: err.response.statusText, status: err.response.status } });\r\n    }\r\n  };\r\n  \r\n  // Delete post\r\n  export const deletePost = (postId) => async (dispatch) => {\r\n    try {\r\n      await api.delete(`/posts/${postId}`);\r\n      dispatch({ type: DELETE_POST, payload: postId });\r\n      dispatch(setAlert('Post Removed', 'success'));\r\n    } catch (err) {\r\n      dispatch({ type: POST_ERROR, payload: { msg: err.response.statusText, status: err.response.status } });\r\n    }\r\n  };\r\n  \r\n  // Add post\r\n  export const addPost = (formData) => async (dispatch) => {\r\n    try {\r\n      const res = await api.post('/posts', formData);\r\n      dispatch({ type: ADD_POST, payload: res.data });\r\n      dispatch(setAlert('Post Created', 'success'));\r\n    } catch (err) {\r\n      dispatch({ type: POST_ERROR, payload: { msg: err.response.statusText, status: err.response.status } });\r\n    }\r\n  };\r\n  \r\n  // Add comment\r\n  export const addComment = (postId, formData) => async (dispatch) => {\r\n    try {\r\n      const res = await api.post(`/posts/comment/${postId}`, formData);\r\n      dispatch({ type: ADD_COMMENT, payload: res.data });\r\n      dispatch(setAlert('Comment Added', 'success'));\r\n    } catch (err) {\r\n      dispatch({ type: POST_ERROR, payload: { msg: err.response.statusText, status: err.response.status } });\r\n    }\r\n  };\r\n  \r\n  // Delete comment\r\n  export const deleteComment = (postId, commentId) => async (dispatch) => {\r\n    try {\r\n      await api.delete(`/posts/comment/${postId}/${commentId}`);\r\n      dispatch({ type: REMOVE_COMMENT, payload: commentId });\r\n      dispatch(setAlert('Comment Removed', 'success'));\r\n    } catch (err) {\r\n      dispatch({ type: POST_ERROR, payload: { msg: err.response.statusText, status: err.response.status } });\r\n    }\r\n  };\r\n  ","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <div className='post-form'>\r\n            <div className='bg-primary p'>\r\n                <h3>Say Something...</h3>\r\n            </div>\r\n            <form\r\n                className='form my-1'\r\n                onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    addPost({ text });\r\n                    setText('');\r\n                }}\r\n            >\r\n                <textarea\r\n                    name='text'\r\n                    cols='30'\r\n                    rows='5'\r\n                    placeholder='Create a post'\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                    required\r\n                ></textarea>\r\n                <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nPostForm.propTypes = {\r\n    addPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getPosts } from '../../actions/post';\r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm';\r\nimport Spinner from '../layout/spinner/Spinner';\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, [getPosts]);\r\n\r\n    return loading ? (\r\n        <Spinner />\r\n    ) : (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Posts</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user'></i> Welcome to the community\r\n            </p>\r\n            <PostForm />\r\n            <div className='posts'>\r\n                {posts.length > 0 && posts.map((post) => <PostItem key={post._id} post={post} />)}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nPosts.propTypes = {\r\n    getPosts: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../../actions/post';\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n    const [text, setText] = useState(' ');\r\n\r\n    return (\r\n        <div className='post-form'>\r\n            <div className='bg-primary p'>\r\n                <h3>Leave a Comment</h3>\r\n            </div>\r\n            <form\r\n                className='form my-1'\r\n                onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    addComment(postId, { text });\r\n                    setText('');\r\n                }}\r\n            >\r\n                <textarea\r\n                    name='text'\r\n                    cols='30'\r\n                    rows='5'\r\n                    placeholder='Create a comment '\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                    required\r\n                ></textarea>\r\n                <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    addComment: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addComment })(CommentForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteComment } from '../../actions/post';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\n\r\nconst CommentItem = ({\r\n    postId,\r\n    comment: { _id, text, name, avatar, user, date },\r\n    deleteComment,\r\n    auth,\r\n}) => {\r\n    return (\r\n        <div className='post bg-white p-1 my-1'>\r\n            <div>\r\n                <Link to={`/profile/${user}`}>\r\n                    <img className='round-img' src={avatar} alt='' />\r\n                    <h4>{name}</h4>\r\n                </Link>\r\n            </div>\r\n            <div>\r\n                <p className='my-1'>{text}</p>\r\n                <p className='post-date'>\r\n                    Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n                </p>\r\n                {!auth.loading && user === auth.user._id && (\r\n                    <button\r\n                        onClick={(e) => deleteComment(postId, _id)}\r\n                        type='button'\r\n                        className='btn btn-danger'\r\n                    >\r\n                        <i className='fas fa-times'></i>\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nCommentItem.propTypes = {\r\n    postId: PropTypes.string.isRequired,\r\n    comment: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    deleteComment: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/spinner/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from './CommentItem';\r\nimport { getPost } from '../../actions/post';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n    useEffect(() => {\r\n        getPost(match.params.id);\r\n    }, [getPost]);\r\n\r\n    return loading || post === null ? (\r\n        <Spinner />\r\n    ) : (\r\n        <Fragment>\r\n            <Link to='/posts' className='btn'>\r\n                Back To Posts\r\n            </Link>\r\n            <PostItem post={post} showActions={false} />\r\n            <CommentForm postId={post._id} />\r\n            <div className='comments'>\r\n                {post.comments.map((comment) => (\r\n                    <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n                ))}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nPost.propTypes = {\r\n    getPost: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\n// Reducer\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            // match alert id and return others\r\n            return state.filter((alert) => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    DELETE_ACCOUNT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null,\r\n};\r\n\r\n// Authentication reducer\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload,\r\n            };\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n            };\r\n        case AUTH_ERROR:\r\n        case REGISTER_FAIL:\r\n        case LOGIN_FAIL:\r\n        case DELETE_ACCOUNT:\r\n        case LOGOUT:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n    CLEAR_PROFILE,\r\n    GET_PROFILES,\r\n    GET_REPOS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case UPDATE_PROFILE:\r\n        case GET_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false,\r\n            };\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false,\r\n            };\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: payload,\r\n                loading: false,\r\n            };\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false,\r\n                profile: null,\r\n            };\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                repos: [],\r\n                loading: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false,\r\n            };\r\n        case GET_POST:\r\n            return {\r\n                ...state,\r\n                post: payload,\r\n                loading: false,\r\n            };\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [payload, ...state.posts],\r\n                loading: false,\r\n            };\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false,\r\n            };\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                // map through the state the posts, check if it matches the post id, return new state with all that post\r\n                posts: state.posts.map((post) =>\r\n                    post._id === payload.postId ? { ...post, likes: payload.likes } : post\r\n                ),\r\n                loading: false,\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                // return all posts except for the one that matches with postId\r\n                posts: state.posts.filter((post) => post._id !== payload),\r\n                loading: false,\r\n            };\r\n        case ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: { ...state.post, comments: payload },\r\n                loading: false,\r\n            };\r\n        case REMOVE_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: {\r\n                    ...state.post,\r\n                    comments: state.post.comments.filter((comment) => comment._id !== payload),\r\n                },\r\n                loading: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n    alert,\r\n    auth,\r\n    profile,\r\n    post,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Landing from './components/layout/Landing';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport Alert from './components/layout/Alert';\r\nimport setAuthToken from './utils/setAuthToken';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport CreateProfile from './components/profile-form/CreateProfile';\r\nimport EditProfile from './components/profile-form/EditProfile';\r\nimport Profiles from './components/profiles/Profiles';\r\nimport AddExperience from './components/profile-form/AddExperience';\r\nimport AddEducation from './components/profile-form/AddEducation';\r\nimport PrivateRoute from './components/routing/PrivateRoute';\r\nimport Profile from './components/profile/Profile';\r\nimport Posts from './components/posts/Posts';\r\nimport Post from './components/post/Post';\r\n// Redux\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport { loadUser } from './actions/auth';\r\n\r\nif (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n}\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        store.dispatch(loadUser());\r\n    }, []);\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <Router>\r\n                <Fragment>\r\n                    <Navbar />\r\n                    <Route exact path='/' component={Landing} />\r\n                    <section className='container'>\r\n                        <Alert />\r\n                        <Switch>\r\n                            <Route exact path='/register' component={Register} />\r\n                            <Route exact path='/login' component={Login} />\r\n                            <Route exact path='/profiles' component={Profiles} />\r\n                            <Route exact path='/profile/:id' component={Profile} />\r\n                            <PrivateRoute exact path='/dashboard' component={Dashboard} />\r\n                            <PrivateRoute exact path='/create-profile' component={CreateProfile} />\r\n                            <PrivateRoute exact path='/edit-profile' component={EditProfile} />\r\n                            <PrivateRoute exact path='/add-experience' component={AddExperience} />\r\n                            <PrivateRoute exact path='/add-education' component={AddEducation} />\r\n                            <PrivateRoute exact path='/posts' component={Posts} />\r\n                            <PrivateRoute exact path='/posts/:id' component={Post} />\r\n                        </Switch>\r\n                    </section>\r\n                </Fragment>\r\n            </Router>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}